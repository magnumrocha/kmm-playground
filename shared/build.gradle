plugins {
    id 'org.jetbrains.kotlin.multiplatform'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'org.jetbrains.kotlin.native.cocoapods'
    id 'com.android.library'
    id 'io.gitlab.arturbosch.detekt' version "1.15.0"
}

group = 'com.magnumrocha'
version = '1.0.0'

apply from: rootProject.file("gradle/targets.gradle")
apply from: project.file("gradle/target_android.gradle")
apply from: project.file("gradle/target_ios.gradle")

repositories {
    google()
    mavenCentral()
}

kotlin {
    sourceSets {
        all {
            languageSettings {
                progressiveMode = true
                experimentalAnnotations.each { optIn(it) } // kotlin.ExperimentalUnsignedTypes - annotation FQ-name
            //  languageVersion = '1.4' // possible values: '1.0', '1.1', '1.2', '1.3', '1.4'
            //  apiVersion = '1.4' // possible values: '1.0', '1.1', '1.2', '1.3', '1.4'
            //  enableLanguageFeature('InlineClasses') // language feature name
            }
        }

        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')

                // kotlin
                implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_mt_version") {
                    force = true // necessary for ios coroutines support
                }

                // serialization
                implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.1'

                // networking
                implementation "io.ktor:ktor-client-core:$ktor_version"
                implementation "io.ktor:ktor-client-logging:$ktor_version"
                implementation "io.ktor:ktor-client-serialization:$ktor_version"

                // connection state
                implementation 'dev.tmapps:konnection:1.1.2'
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
                implementation 'app.cash.turbine:turbine:0.7.0'
             // implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
            }
        }
    }

    sourceSets.matching { it.name.endsWith("Test") }.all {
        it.languageSettings {
            optIn("kotlin.RequiresOptIn")
            optIn('kotlin.time.ExperimentalTime')
        }
    }
}